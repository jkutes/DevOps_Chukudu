#!/usr/bin/env groovy
pipeline {
    /*
     This is GitHub project, which checksout DevopsChukudu project from GitHub and then runs 2 stages

     Stage one
      Run "Dckr_run.sh" from 01 folder to build, scan, run docker image
     Stage two
      Run "K8s_run.sh" from 02 folder to define and run litecoin statefulset, presist volume 
    
     In the end Send Slack notification on success or failure to a specific channel

     Run on any agent for the test purposes, but better on one labeled 'docker'.
     Docker agent will have docker, K8s, git installed at a minimum.
     
    */
  
  agent any
  // agent {
  //     node {
  //         //label 'docker'
  //     }
  // }

  // set env -> Slack notofication; deployment K8s traget; Docker registry 
  environment {       
      SLK_CHNL = "#Build-Notifications"
      SLK_TEAM = "LITECOIN-TEAM"
      SLK_TKN = credentials("slck_tkn")  //defined in Jenkins credentails
      
      DPLY_URL = "https://our.deployK8sTarget.com/"
      STK_PREFIX = "LiteCoin"
      DPLY_VERSION = "0.18.1"

      // REG_ADRS = "our.Docker-registry.com"
      // REG_AUTH = credentials("docker-reg")  //defined in Jenkins credentials
  }

  stages {
    stage("Litecoin-DOCKER") {
      steps {
        echo "Building docker image"
        sh 'chmod +x 01-Docker-ayes/Dckr_run.sh'
        sh '01-Docker-ayes/Dckr_run.sh'
      }
    }

    stage("Litecoin-K8s") {
      steps {
        echo "Building K8s StatefulSet"
        sh 'chmod +x 02-k8s-FTW/K8s_run.sh'
        sh '02-k8s-FTW/K8s_run.sh'
      }
      post {
            success {
                slackSend(
                        channel: "${env.SLK_CHNL}",
                        teamDomain: "${env.SLK_TEAM}",
                        token: "${env.SLK_TKN}",
                        color: "good",
                        message: "${env.STK_PREFIX} deploy successful: *${env.DPLY_VERSION}*. <${env.DPLY_URL}|To access this service> - <${env.BUILD_URL}|Check this build>"
                )
            }

            failure {
                slackSend(
                        channel: "${env.SLK_CHNL}",
                        teamDomain: "${env.SLK_TEAM}",
                        token: "${env.SLK_TKN}",
                        color: "danger",
                        message: "${env.STK_PREFIX} deployment failed: *${env.DPLY_VERSION}*. <${env.BUILD_URL}|Check this build>"
                )
            }
      }
    }
  }
}